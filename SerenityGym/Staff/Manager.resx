<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>